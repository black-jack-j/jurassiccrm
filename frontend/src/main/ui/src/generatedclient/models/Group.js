"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Jurassic CRM API
 * Jurassic CRM
 *
 * The version of the OpenAPI document: v0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var User_1 = require("./User");
/**
* @export
* @enum {string}
*/
var GroupRolesEnum;
(function (GroupRolesEnum) {
    GroupRolesEnum["DocumentReader"] = "DOCUMENT_READER";
    GroupRolesEnum["DinosaurPassportReader"] = "DINOSAUR_PASSPORT_READER";
    GroupRolesEnum["AviaryPassportReader"] = "AVIARY_PASSPORT_READER";
    GroupRolesEnum["ThemeZoneProjectReader"] = "THEME_ZONE_PROJECT_READER";
    GroupRolesEnum["TechnologicalMapReader"] = "TECHNOLOGICAL_MAP_READER";
    GroupRolesEnum["ResearchDataReader"] = "RESEARCH_DATA_READER";
    GroupRolesEnum["DocumentWriter"] = "DOCUMENT_WRITER";
    GroupRolesEnum["DinosaurPassportWriter"] = "DINOSAUR_PASSPORT_WRITER";
    GroupRolesEnum["AviaryPassportWriter"] = "AVIARY_PASSPORT_WRITER";
    GroupRolesEnum["ThemeZoneProjectWriter"] = "THEME_ZONE_PROJECT_WRITER";
    GroupRolesEnum["TechnologicalMapWriter"] = "TECHNOLOGICAL_MAP_WRITER";
    GroupRolesEnum["ResearchDataWriter"] = "RESEARCH_DATA_WRITER";
    GroupRolesEnum["TaskReader"] = "TASK_READER";
    GroupRolesEnum["IncubationTaskReader"] = "INCUBATION_TASK_READER";
    GroupRolesEnum["AviaryBuildingTaskReader"] = "AVIARY_BUILDING_TASK_READER";
    GroupRolesEnum["ResearchTaskReader"] = "RESEARCH_TASK_READER";
    GroupRolesEnum["TaskWriter"] = "TASK_WRITER";
    GroupRolesEnum["IncubationTaskWriter"] = "INCUBATION_TASK_WRITER";
    GroupRolesEnum["AviaryBuildingTaskWriter"] = "AVIARY_BUILDING_TASK_WRITER";
    GroupRolesEnum["ResearchTaskWriter"] = "RESEARCH_TASK_WRITER";
    GroupRolesEnum["SecurityReader"] = "SECURITY_READER";
    GroupRolesEnum["SecurityWriter"] = "SECURITY_WRITER";
    GroupRolesEnum["Admin"] = "ADMIN";
})(GroupRolesEnum = exports.GroupRolesEnum || (exports.GroupRolesEnum = {}));
function GroupFromJSON(json) {
    return GroupFromJSONTyped(json, false);
}
exports.GroupFromJSON = GroupFromJSON;
function GroupFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !runtime_1.exists(json, 'id') ? undefined : json['id'],
        'name': !runtime_1.exists(json, 'name') ? undefined : json['name'],
        'roles': !runtime_1.exists(json, 'roles') ? undefined : json['roles'],
        'users': !runtime_1.exists(json, 'users') ? undefined : (new Set(json['users'].map(User_1.UserFromJSON))),
    };
}
exports.GroupFromJSONTyped = GroupFromJSONTyped;
function GroupToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'name': value.name,
        'roles': value.roles,
        'users': value.users === undefined ? undefined : (Array.from(value.users).map(User_1.UserToJSON)),
    };
}
exports.GroupToJSON = GroupToJSON;
